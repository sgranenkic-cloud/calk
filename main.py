import math
from telegram import Update, ReplyKeyboardMarkup
from telegram.ext import ApplicationBuilder, CommandHandler, MessageHandler, filters, ContextTypes

TOKEN = "8472159060:AAEFU7m3nEBkFGcBP2JHDU_xcMbh6gZyQAU"

main_menu = [["% –ø—É–ª—å—Å–∞", "–¢–∞–±–ª–∏—Ü–∞ —Ç–µ–º–ø–æ–≤"], ["–î–∏—Å—Ç–∞–Ω—Ü–∏—è+—Ç–µ–º–ø=–≤—Ä–µ–º—è", "–ü—Ä–æ–≥–Ω–æ–∑ —Ç–µ–º–ø–∞"], ["–°–∫–æ—Ä–æ—Å—Ç—å –¥–æ—Ä–æ–∂–∫–∏", "–ù–∞–∑–∞–¥"]]

async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text(
        "üêÜ –ü—Ä–∏–≤–µ—Ç!\n–¢—ã –≤ –±–æ—Ç–µ –±–µ–≥–æ–≤–æ–≥–æ –∫–ª—É–±–∞ Cheetah.Club.",
        reply_markup=ReplyKeyboardMarkup(main_menu, resize_keyboard=True)
    )

async def percent_pulse(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text("–í–≤–µ–¥–∏—Ç–µ –º–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–π –ø—É–ª—å—Å –∏ –ø—Ä–æ—Ü–µ–Ω—Ç—ã —á–µ—Ä–µ–∑ –ø—Ä–æ–±–µ–ª (–Ω–∞–ø—Ä–∏–º–µ—Ä: 196 70 85)")

async def handle_text(update: Update, context: ContextTypes.DEFAULT_TYPE):
    text = update.message.text.strip().lower()
    if text == "% –ø—É–ª—å—Å–∞":
        await percent_pulse(update, context)
    elif text == "—Ç–∞–±–ª–∏—Ü–∞ —Ç–µ–º–ø–æ–≤":
        await update.message.reply_text("–¢–∞–±–ª–∏—Ü–∞ —Ç–µ–º–ø–æ–≤ –ø–æ–∫–∞ –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ")
    elif text == "–¥–∏—Å—Ç–∞–Ω—Ü–∏—è+—Ç–µ–º–ø=–≤—Ä–µ–º—è":
        await update.message.reply_text("–í–≤–µ–¥–∏—Ç–µ –¥–∏—Å—Ç–∞–Ω—Ü–∏—é (–º) –∏ —Ç–µ–º–ø (–º–º:—Å—Å)")
    elif text == "–ø—Ä–æ–≥–Ω–æ–∑ —Ç–µ–º–ø–∞":
        await update.message.reply_text("–í–≤–µ–¥–∏—Ç–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç (–∫–º –≤—Ä–µ–º—è)")
    elif text == "—Å–∫–æ—Ä–æ—Å—Ç—å –¥–æ—Ä–æ–∂–∫–∏":
        await update.message.reply_text("–í–≤–µ–¥–∏—Ç–µ —Å–∫–æ—Ä–æ—Å—Ç—å –¥–æ—Ä–æ–∂–∫–∏ –≤ –∫–º/—á")
    elif text == "–Ω–∞–∑–∞–¥":
        await start(update, context)
    else:
        parts = text.replace(",", ".").split()
        if len(parts) >= 2 and parts[0].isdigit():
            max_hr = int(parts[0])
            try:
                percentages = list(map(float, parts[1:]))
                res = [f"{p}%: {round(max_hr * p / 100)} —É–¥/–º–∏–Ω" for p in percentages]
                await update.message.reply_text("\n".join(res))
            except:
                await update.message.reply_text("–û—à–∏–±–∫–∞ –≤–≤–æ–¥–∞")

def main():
    app = ApplicationBuilder().token(TOKEN).build()
    app.add_handler(CommandHandler("start", start))
    app.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, handle_text))
    app.run_polling()

if __name__ == "__main__":
    main()
